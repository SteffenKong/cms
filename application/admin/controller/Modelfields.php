<?php
namespace app\admin\controller;

use app\admin\controller\Common;
use app\admin\model\ModelFields as MfModel;
use think\Db;
use think\Request;

/**
 * Class ModelFields
 * @package app\admin\controller
 * 模型字段控制器
 */
class Modelfields extends Common
{

    protected $modelFields = null;

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->modelFields = new MfModel;
    }

    /**
     * @return string
     * @throws \think\Exception
     * 分页模型字段列表
     */
    public function index()
    {
        $pageSize = 2;
        //多表关联查询
        $rows = db('model_fields')->field('a.*,b.model_name')->alias('a')->join('cms_model b','a.model_id=b.id')->paginate($pageSize);
        $this->assign('rows',$rows);
        return $this->view->fetch('list');
    }

    /**
     * @return string
     * @throws \think\Exception
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     * 添加模型字段界面
     */
    public function add()
    {
        //获取所有的模型数据
        $modelData = db('model')->field('id,model_name')->select();

        $this->assign('modelData',$modelData);
        return $this->view->fetch();
    }

    /**
     * @param Request $request
     * 添加模型字段数据
     */
    public function doAdd(Request $request)
    {
        $data = $request->post();

        $res = $this->modelFields->add($data);

        if(!$res)
        {
            $this->error('添加失败',url('/admin/Modelfields/add'),'',1);
        }


        //获取模型的表名
        $table = db('model')->field('table_name')->where('id',$data['model_id'])->find();

        //拼接表名
        $tableName = config('database.prefix').$table['table_name'];

        $fieldType = '';   //拼接字段的属性

        switch($data['field_type'])
        {
            case 1:
                $fieldType = "varchar(191) not null default ''";
                break;
            case 2:
                $fieldType = "varchar(191) not null default ''";
                break;
            case 3:
                $fieldType = "varchar(191) not null default ''";
                break;
            case 4:
                $fieldType = "varchar(191) not null default ''";
                break;
            case 5:
                $fieldType = "varchar(191) not null default ''";
                break;
            case 6:
                $fieldType = "varchar(200) not null default ''";
                break;
            case 7:
                $fieldType = "decimal(10,2) not null default 0.00";
                break;
            case 8:
                $fieldType = "int not null default 0";
                break;
            case 9:
                $fieldType = "text";
                break;
            default:
                $fieldType = "varchar(191) not null default ''";
                break;
        }

        //拼接sql语句
        $sql = "ALTER TABLE {$tableName} ADD COLUMN {$data['field_ename']} {$fieldType}";
        //执行原生sql语句
        Db::execute($sql);
        $this->success('添加成功',url('/admin/Modelfields/index'),'',1);
    }

    /**
     * @return string
     * @throws \think\Exception
     * 编辑界面
     */
    public function edit()
    {
        $id = input('id','','intval');
        //获取该数据的模型id
        $row = $this->modelFields->getDataById($id);
        //获取所有的模型数据
        $modelData = db('model')->field('id,model_name')->select();
        $this->assign([
            'row'=>$row,
            'modelData'=>$modelData
        ]);
        return $this->view->fetch();
    }


    public function doEdit(Request $request)
    {
        /**
         * 编辑字段的步骤：
         *  1.获取模型字段id
         *  2.获取该模型字段的所属表名
         *  3.然后修改该表的字段
         *  4.将字段数据进行编辑
         */
        $data = $request->post();
        $id = input('id','','intval');
        //获取该数据的模型id
        $row = $this->modelFields->getDataById($id);
        $modelId = $row['model_id'];
        $table = db('model')->field('table_name')->where('id',$modelId)->find();
        $tableName = config('database.prefix').$table['table_name'];
        $res = $this->modelFields->edit($data);
        if($res===false)
        {
            $this->error('编辑失败',url('admin/Modelfields/edit',['id'=>$data['id']]),'',1);
        }
        $oldField = $row['field_ename'];

        $fieldType = '';   //拼接字段的属性
        switch($data['field_type'])
        {
            case 1:
                $fieldType = "varchar(191) not null default ''";
                break;
            case 2:
                $fieldType = "varchar(191) not null default ''";
                break;
            case 3:
                $fieldType = "varchar(191) not null default ''";
                break;
            case 4:
                $fieldType = "varchar(191) not null default ''";
                break;
            case 5:
                $fieldType = "varchar(191) not null default ''";
                break;
            case 6:
                $fieldType = "varchar(200) not null default ''";
                break;
            case 7:
                $fieldType = "decimal(10,2) not null default 0.00";
                break;
            case 8:
                $fieldType = "int not null default 0";
                break;
            case 9:
                $fieldType = "text";
                break;
            default:
                $fieldType = "varchar(191) not null default ''";
                break;
        }

        $sql = "ALTER TABLE {$tableName} CHANGE COLUMN {$oldField} {$data['field_ename']} {$fieldType}";
        Db::execute($sql);
        $this->success('编辑成功',url('admin/Modelfields/index'),'',1);
    }

    /**
     * @param Request $request
     * 删除操作
     */
    public function delete(Request $request)
    {
        /**
         *删除字段的步骤：
         *  1.获取模型字段id
         *  2.通过模型字段id获取需要操作的表名称
         *  3.然后再拼接sql语句进行删除该表的字段
         *  4.删除字段表的数据
         */
        $id = input('id','');

        //获取该数据的模型id
        $row = $this->modelFields->getDataById($id);
        $modelId = $row['model_id'];

        $res = $this->modelFields->deleteField($id);

        if($res===false)
        {
            $this->error('删除失败',url('admin/Modelfields/index'),'',1);
        }

        /**** 操作sql ****/
        $table = db('model')->field('table_name')->where('id',$modelId)->find();

        $tableName = config('database.prefix').$table['table_name'];

        $sql = "ALTER TABLE {$tableName} DROP COLUMN {$row['field_ename']}";
        Db::execute($sql);
        $this->success('删除成功',url('admin/Modelfields/index'),'',1);
    }
}